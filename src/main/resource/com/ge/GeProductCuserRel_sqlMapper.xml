<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ge.dao.GeProductCuserRelMapper" > <!-- FIXME 这里重构的时候，要修改这个包 -->
	<resultMap id="BaseResultMap" type="java.util.HashMap">
		<id column="id" property="id" javaType="java.lang.Integer" jdbcType="NUMERIC" />
 		<result column="valid_time" property="validTime" jdbcType="DATE" javaType="java.util.Date" />
 		<result column="create_time" property="createTime" jdbcType="DATE" javaType="java.util.Date" />
 		<result column="pid" property="pid" jdbcType="NUMERIC" javaType="java.lang.Integer" />
 		<result column="cid" property="cid" jdbcType="NUMERIC" javaType="java.lang.Integer" />
 	</resultMap>
	
	<resultMap id="BaseResultVo" type="com.ge.po.GeProductCuserRel"> <!-- FIXME 这里重构的时候，要修改这个包 -->
		<id column="id" property="id" javaType="java.lang.Integer" jdbcType="NUMERIC" />
 		<result column="valid_time" property="validTime" jdbcType="DATE" javaType="java.util.Date" />
 		<result column="create_time" property="createTime" jdbcType="DATE" javaType="java.util.Date" />
 		<result column="pid" property="pid" jdbcType="NUMERIC" javaType="java.lang.Integer" />
 		<result column="cid" property="cid" jdbcType="NUMERIC" javaType="java.lang.Integer" />
 	</resultMap>

	<!-- 查询数据列Sql不转换成对应的Java命名 -->
	<sql id="Base_Column_List" >
		id,
		valid_time,
		create_time,
		pid,
		cid
	</sql>
	
	<!-- 查询数据列Sql换成对应的Java命名 -->
	<sql id="Base_Column_List_JavaName" >
		id as "id",
		valid_time as "validTime",
		create_time as "createTime",
		pid as "pid",
		cid as "cid"
	</sql>
	
	<!-- 写入操作的SQL -->
	<sql id="Insert_Base_values">
		#{id,jdbcType=NUMERIC},
 		#{validTime,jdbcType=DATE},
 		#{createTime,jdbcType=DATE},
 		#{pid,jdbcType=NUMERIC},
 		#{cid,jdbcType=NUMERIC}
 	</sql>
	
	<!-- 查询条件的sql -->
	<sql id="Base_Where_Sql">
		<where>
		<if test="id != null and id != ''">
			and id = #{id,jdbcType=NUMERIC}
		</if>
		<if test="validTime != null and validTime != ''">
			and valid_time = #{validTime,jdbcType=DATE}
		</if>
		<if test="createTime != null and createTime != ''">
			and create_time = #{createTime,jdbcType=DATE}
		</if>
		<if test="pid != null and pid != ''">
			and pid = #{pid,jdbcType=NUMERIC}
		</if>
		<if test="cid != null and cid != ''">
			and cid = #{cid,jdbcType=NUMERIC}
		</if>
		</where>
	</sql>
	
	

	<!-- 条件查询总数据量 -->
	<select id="queryCount" parameterType="map" resultType="long">
	select count(1)
	from ge_product_cuser_rel <include refid="Base_Where_Sql" />
	</select>
	
	
	<!-- 单独条件分页查询语句,注意下面语句中的endpoint和startpoint这两个名称不可修改，否则将导致sql错误 -->
	<select id="queryListPage" parameterType="map" resultMap="BaseResultMap">
	select * from (
		select a.*,rownum rn from (
		select 
		<include refid="Base_Column_List"/>
		from ge_product_cuser_rel
		<include refid="Base_Where_Sql"/>
		) a where rownum &lt;= #{endpoint}
	) where rn &gt;= #{startpoint}
	</select>
	
	<!-- 单独条件分页查询语句,注意下面语句中的endpoint和startpoint这两个名称不可修改，否则将导致sql错误 -->
	<select id="queryListPageVo" parameterType="map" resultMap="BaseResultVo">
	select * from (
		select a.*,rownum rn from (
		select 
		<include refid="Base_Column_List"/>
		from ge_product_cuser_rel
		<include refid="Base_Where_Sql"/>
		) a where rownum &lt;= #{endpoint}
	) where rn &gt;= #{startpoint}
	</select>
	
	<!-- 条件查询 -->
	<select id="query" parameterType="map" resultMap="BaseResultMap">
		select 
		<include refid="Base_Column_List"/>
		from ge_product_cuser_rel
		<include refid="Base_Where_Sql"/>
	</select>
	
	<!-- 条件查询 -->
	<select id="queryVo" parameterType="map" resultMap="BaseResultVo">
		select 
		<include refid="Base_Column_List"/>
		from ge_product_cuser_rel
		<include refid="Base_Where_Sql"/>
	</select>
	
	<!-- 综合条件分页查询语句,注意下面语句中的endpoint和startpoint这两个名称不可修改，否则将导致sql错误 -->
	<select id="queryPage" parameterType="map" resultMap="BaseResultMap">
	<choose>
		<when test="endpoint!=null and endpoint != '' and startpoint != null and startpoint != ''">
		select * from (
			select a.*,rownum rn from (
				select 
				<include refid="Base_Column_List"/>
				from ge_product_cuser_rel
				<include refid="Base_Where_Sql"/>
			) a where rownum &lt;= #{endpoint}
		) where rn &gt;= #{startpoint}
		</when>
		<otherwise>
		<!-- 这里的"count"重命名不可修改，否则会出现异常 -->
		select count(1) "count" from ge_product_cuser_rel <include refid="Base_Where_Sql" />
		</otherwise>
	</choose>
	</select>
	<delete id="deleteByCid" parameterType="java.lang.Integer" >
		delete from ge_product_cuser_rel
		where cid = #{cid,jdbcType=NUMERIC}
	</delete>

	<select id="queryByCId" parameterType="java.lang.Integer" resultType="map">
		select a.*,b.name from GE_PRODUCT_CUSER_REL a, GE_CERTIFIED_PRODUCT b
        WHERE a.pid=b.ID  AND  a.cid= #{cid,jdbcType=NUMERIC}
	</select>
<select id="queryCountByPid" parameterType="java.lang.Integer" resultType="int">
	select COUNT (1)  from GE_PRODUCT_CUSER_REL where pid = #{pid,jdbcType=NUMERIC}
</select>
</mapper>
